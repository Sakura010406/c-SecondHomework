using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace graphCalculate
{
    public abstract class Graph
    {
        public Graph(){
     
        }
        public abstract bool judgement
        {
            get;
        }
    
        public abstract double calculator
        {
            get;
        }

    }
    public class Rectangle: Graph
    {
        private double m_Width;

        private double m_Height;
        public Rectangle(double width,double height)
        {
            this.m_Width = width;

            this.m_Height = height;

        }
        public override bool judgement
        {
            get
            {
                if (this.m_Width > 0 && this.m_Height > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }

            }
        }

        public override double calculator
        {
            get
            {
                return this.m_Width * this.m_Height;
            }
        }



    }
    public class  Triangle : Graph
    {
        private double m_FirstLength;

        private double m_SecondLength;

        private double m_ThirdLength;
        public Triangle(double firstLength,double secondLength,double thirdLength)
        {
            this.m_FirstLength = firstLength;

            this.m_SecondLength = secondLength;

            this.m_ThirdLength = thirdLength;
        }

        public override bool judgement
        {
            get
            {
                if (this.m_FirstLength + this.m_SecondLength > this.m_ThirdLength && this.m_FirstLength + this.m_ThirdLength > this.m_SecondLength && this.m_SecondLength + this.m_ThirdLength > this.m_FirstLength)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
        }
        public override double calculator
        {
            get
            {
                double circumference = (this.m_FirstLength + this.m_SecondLength + this.m_ThirdLength)/2;

                return Math.Sqrt(circumference * (circumference - this.m_FirstLength) * (circumference - this.m_SecondLength) * (circumference - this.m_ThirdLength));
            }
        }
    }

    public class Square: Graph
    {
        private double m_SideLength;
        public Square(double sideLength)
        {
            this.m_SideLength = sideLength;
        }
        public override bool judgement
        {
            get
            {
                if (this.m_SideLength > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }

        }
        public override double calculator
        {
            get
            {
                return this.m_SideLength * this.m_SideLength;
            }
        }

    }







    class Program
    {

        static void Main(string[] args)
        {
            bool flag = true;

            while(flag) {
                bool calculateFlag = true;

                Console.WriteLine("请输入您要计算的图形类型: 0、长方形 1、三角形 2、正方形");

                int select = 0;

                select = Convert.ToInt32(Console.ReadLine());

                switch (select)
                {
                    case 0:
                        while (calculateFlag)
                        {
                            Console.WriteLine("请输入长方形的长:");

                            double lenth = 0;

                            lenth = Convert.ToDouble(Console.ReadLine());

                            Console.WriteLine("请输入长方形的宽:");

                            double width = 0;

                            width = Convert.ToDouble(Console.ReadLine());

                            Graph graph = new Rectangle(lenth,width);

                            if (graph.judgement)
                            {
                                Console.WriteLine("长方形的面积为:{0}", graph.calculator);

                                calculateFlag = false;

                            }
                            else
                            {
                                Console.WriteLine("您输入的数据有误!请重新输入:");

                                calculateFlag = true;
                            }
                        }
                        flag = false;

                        break;
                    case 1:
                        while (calculateFlag)
                        {
                            Console.WriteLine("请输入三角形的第一条边:");

                            double firstLenth = 0;

                            firstLenth = Convert.ToDouble(Console.ReadLine());

                            Console.WriteLine("请输入三角形的第二条边:");

                            double secondLength=0;

                            secondLength = Convert.ToDouble(Console.ReadLine());

                            Console.WriteLine("请输入三角形的第三条边:");

                            double thirdLength = 0;

                            thirdLength = Convert.ToDouble(Console.ReadLine());

                            Graph graph = new Triangle(firstLenth,secondLength,thirdLength);

                            if (graph.judgement)
                            {
                                Console.WriteLine("三角形的面积为:{0}", graph.calculator);

                                calculateFlag = false;

                            }
                            else
                            {
                                Console.WriteLine("您输入的数据有误!请重新输入:");

                                calculateFlag = true;
                            }
                        }
                        flag = false;

                        break;

                    case 2:
                        while (calculateFlag)
                        {

                            Console.WriteLine("请输入正方形的边长:");

                            double sideLength = 0;

                            sideLength = Convert.ToDouble(Console.ReadLine());

                            Graph graph = new Square(sideLength);

                            if (graph.judgement)
                            {
                                Console.WriteLine("正方形的面积为:{0}", graph.calculator);

                                calculateFlag = false;

                            }
                            else
                            {
                                Console.WriteLine("您输入的数据有误!请重新输入:");

                                calculateFlag = true;
                            }
                        }
                        flag = false;

                        break;

                    default:

                        Console.WriteLine("您选择的图形无效，请重新选择:");

                        flag = true;

                         break; 
                 }
                
            }
  
            Console.ReadKey();
        }
    }
}
